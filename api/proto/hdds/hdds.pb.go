// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hdds.proto

package hdds

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PipelineState int32

const (
	PipelineState_PIPELINE_ALLOCATED PipelineState = 1
	PipelineState_PIPELINE_OPEN      PipelineState = 2
	PipelineState_PIPELINE_DORMANT   PipelineState = 3
	PipelineState_PIPELINE_CLOSED    PipelineState = 4
)

var PipelineState_name = map[int32]string{
	1: "PIPELINE_ALLOCATED",
	2: "PIPELINE_OPEN",
	3: "PIPELINE_DORMANT",
	4: "PIPELINE_CLOSED",
}

var PipelineState_value = map[string]int32{
	"PIPELINE_ALLOCATED": 1,
	"PIPELINE_OPEN":      2,
	"PIPELINE_DORMANT":   3,
	"PIPELINE_CLOSED":    4,
}

func (x PipelineState) Enum() *PipelineState {
	p := new(PipelineState)
	*p = x
	return p
}

func (x PipelineState) String() string {
	return proto.EnumName(PipelineState_name, int32(x))
}

func (x *PipelineState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PipelineState_value, data, "PipelineState")
	if err != nil {
		return err
	}
	*x = PipelineState(value)
	return nil
}

func (PipelineState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{0}
}

// *
// Type of the node.
type NodeType int32

const (
	NodeType_OM       NodeType = 1
	NodeType_SCM      NodeType = 2
	NodeType_DATANODE NodeType = 3
	NodeType_RECON    NodeType = 4
)

var NodeType_name = map[int32]string{
	1: "OM",
	2: "SCM",
	3: "DATANODE",
	4: "RECON",
}

var NodeType_value = map[string]int32{
	"OM":       1,
	"SCM":      2,
	"DATANODE": 3,
	"RECON":    4,
}

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}

func (x *NodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeType_value, data, "NodeType")
	if err != nil {
		return err
	}
	*x = NodeType(value)
	return nil
}

func (NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{1}
}

// *
// Enum that represents the Node State. This is used in calls to getNodeList
// and getNodeCount.
type NodeState int32

const (
	NodeState_HEALTHY         NodeState = 1
	NodeState_STALE           NodeState = 2
	NodeState_DEAD            NodeState = 3
	NodeState_DECOMMISSIONING NodeState = 4
	NodeState_DECOMMISSIONED  NodeState = 5
)

var NodeState_name = map[int32]string{
	1: "HEALTHY",
	2: "STALE",
	3: "DEAD",
	4: "DECOMMISSIONING",
	5: "DECOMMISSIONED",
}

var NodeState_value = map[string]int32{
	"HEALTHY":         1,
	"STALE":           2,
	"DEAD":            3,
	"DECOMMISSIONING": 4,
	"DECOMMISSIONED":  5,
}

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return proto.EnumName(NodeState_name, int32(x))
}

func (x *NodeState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeState_value, data, "NodeState")
	if err != nil {
		return err
	}
	*x = NodeState(value)
	return nil
}

func (NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{2}
}

type QueryScope int32

const (
	QueryScope_CLUSTER QueryScope = 1
	QueryScope_POOL    QueryScope = 2
)

var QueryScope_name = map[int32]string{
	1: "CLUSTER",
	2: "POOL",
}

var QueryScope_value = map[string]int32{
	"CLUSTER": 1,
	"POOL":    2,
}

func (x QueryScope) Enum() *QueryScope {
	p := new(QueryScope)
	*p = x
	return p
}

func (x QueryScope) String() string {
	return proto.EnumName(QueryScope_name, int32(x))
}

func (x *QueryScope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryScope_value, data, "QueryScope")
	if err != nil {
		return err
	}
	*x = QueryScope(value)
	return nil
}

func (QueryScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{3}
}

type LifeCycleState int32

const (
	LifeCycleState_OPEN         LifeCycleState = 1
	LifeCycleState_CLOSING      LifeCycleState = 2
	LifeCycleState_QUASI_CLOSED LifeCycleState = 3
	LifeCycleState_CLOSED       LifeCycleState = 4
	LifeCycleState_DELETING     LifeCycleState = 5
	LifeCycleState_DELETED      LifeCycleState = 6
)

var LifeCycleState_name = map[int32]string{
	1: "OPEN",
	2: "CLOSING",
	3: "QUASI_CLOSED",
	4: "CLOSED",
	5: "DELETING",
	6: "DELETED",
}

var LifeCycleState_value = map[string]int32{
	"OPEN":         1,
	"CLOSING":      2,
	"QUASI_CLOSED": 3,
	"CLOSED":       4,
	"DELETING":     5,
	"DELETED":      6,
}

func (x LifeCycleState) Enum() *LifeCycleState {
	p := new(LifeCycleState)
	*p = x
	return p
}

func (x LifeCycleState) String() string {
	return proto.EnumName(LifeCycleState_name, int32(x))
}

func (x *LifeCycleState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LifeCycleState_value, data, "LifeCycleState")
	if err != nil {
		return err
	}
	*x = LifeCycleState(value)
	return nil
}

func (LifeCycleState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{4}
}

type LifeCycleEvent int32

const (
	LifeCycleEvent_FINALIZE    LifeCycleEvent = 1
	LifeCycleEvent_QUASI_CLOSE LifeCycleEvent = 2
	LifeCycleEvent_CLOSE       LifeCycleEvent = 3
	LifeCycleEvent_FORCE_CLOSE LifeCycleEvent = 4
	LifeCycleEvent_DELETE      LifeCycleEvent = 5
	LifeCycleEvent_CLEANUP     LifeCycleEvent = 6
)

var LifeCycleEvent_name = map[int32]string{
	1: "FINALIZE",
	2: "QUASI_CLOSE",
	3: "CLOSE",
	4: "FORCE_CLOSE",
	5: "DELETE",
	6: "CLEANUP",
}

var LifeCycleEvent_value = map[string]int32{
	"FINALIZE":    1,
	"QUASI_CLOSE": 2,
	"CLOSE":       3,
	"FORCE_CLOSE": 4,
	"DELETE":      5,
	"CLEANUP":     6,
}

func (x LifeCycleEvent) Enum() *LifeCycleEvent {
	p := new(LifeCycleEvent)
	*p = x
	return p
}

func (x LifeCycleEvent) String() string {
	return proto.EnumName(LifeCycleEvent_name, int32(x))
}

func (x *LifeCycleEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LifeCycleEvent_value, data, "LifeCycleEvent")
	if err != nil {
		return err
	}
	*x = LifeCycleEvent(value)
	return nil
}

func (LifeCycleEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{5}
}

type ReplicationType int32

const (
	ReplicationType_RATIS       ReplicationType = 1
	ReplicationType_STAND_ALONE ReplicationType = 2
	ReplicationType_CHAINED     ReplicationType = 3
)

var ReplicationType_name = map[int32]string{
	1: "RATIS",
	2: "STAND_ALONE",
	3: "CHAINED",
}

var ReplicationType_value = map[string]int32{
	"RATIS":       1,
	"STAND_ALONE": 2,
	"CHAINED":     3,
}

func (x ReplicationType) Enum() *ReplicationType {
	p := new(ReplicationType)
	*p = x
	return p
}

func (x ReplicationType) String() string {
	return proto.EnumName(ReplicationType_name, int32(x))
}

func (x *ReplicationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReplicationType_value, data, "ReplicationType")
	if err != nil {
		return err
	}
	*x = ReplicationType(value)
	return nil
}

func (ReplicationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{6}
}

type ReplicationFactor int32

const (
	ReplicationFactor_ONE   ReplicationFactor = 1
	ReplicationFactor_THREE ReplicationFactor = 3
)

var ReplicationFactor_name = map[int32]string{
	1: "ONE",
	3: "THREE",
}

var ReplicationFactor_value = map[string]int32{
	"ONE":   1,
	"THREE": 3,
}

func (x ReplicationFactor) Enum() *ReplicationFactor {
	p := new(ReplicationFactor)
	*p = x
	return p
}

func (x ReplicationFactor) String() string {
	return proto.EnumName(ReplicationFactor_name, int32(x))
}

func (x *ReplicationFactor) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReplicationFactor_value, data, "ReplicationFactor")
	if err != nil {
		return err
	}
	*x = ReplicationFactor(value)
	return nil
}

func (ReplicationFactor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{7}
}

type ScmOps int32

const (
	ScmOps_allocateBlock             ScmOps = 1
	ScmOps_keyBlocksInfoList         ScmOps = 2
	ScmOps_getScmInfo                ScmOps = 3
	ScmOps_deleteBlock               ScmOps = 4
	ScmOps_createReplicationPipeline ScmOps = 5
	ScmOps_allocateContainer         ScmOps = 6
	ScmOps_getContainer              ScmOps = 7
	ScmOps_getContainerWithPipeline  ScmOps = 8
	ScmOps_listContainer             ScmOps = 9
	ScmOps_deleteContainer           ScmOps = 10
	ScmOps_queryNode                 ScmOps = 11
)

var ScmOps_name = map[int32]string{
	1:  "allocateBlock",
	2:  "keyBlocksInfoList",
	3:  "getScmInfo",
	4:  "deleteBlock",
	5:  "createReplicationPipeline",
	6:  "allocateContainer",
	7:  "getContainer",
	8:  "getContainerWithPipeline",
	9:  "listContainer",
	10: "deleteContainer",
	11: "queryNode",
}

var ScmOps_value = map[string]int32{
	"allocateBlock":             1,
	"keyBlocksInfoList":         2,
	"getScmInfo":                3,
	"deleteBlock":               4,
	"createReplicationPipeline": 5,
	"allocateContainer":         6,
	"getContainer":              7,
	"getContainerWithPipeline":  8,
	"listContainer":             9,
	"deleteContainer":           10,
	"queryNode":                 11,
}

func (x ScmOps) Enum() *ScmOps {
	p := new(ScmOps)
	*p = x
	return p
}

func (x ScmOps) String() string {
	return proto.EnumName(ScmOps_name, int32(x))
}

func (x *ScmOps) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ScmOps_value, data, "ScmOps")
	if err != nil {
		return err
	}
	*x = ScmOps(value)
	return nil
}

func (ScmOps) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{8}
}

// *
// File access permissions mode.
type BlockTokenSecretProto_AccessModeProto int32

const (
	BlockTokenSecretProto_READ   BlockTokenSecretProto_AccessModeProto = 1
	BlockTokenSecretProto_WRITE  BlockTokenSecretProto_AccessModeProto = 2
	BlockTokenSecretProto_COPY   BlockTokenSecretProto_AccessModeProto = 3
	BlockTokenSecretProto_DELETE BlockTokenSecretProto_AccessModeProto = 4
)

var BlockTokenSecretProto_AccessModeProto_name = map[int32]string{
	1: "READ",
	2: "WRITE",
	3: "COPY",
	4: "DELETE",
}

var BlockTokenSecretProto_AccessModeProto_value = map[string]int32{
	"READ":   1,
	"WRITE":  2,
	"COPY":   3,
	"DELETE": 4,
}

func (x BlockTokenSecretProto_AccessModeProto) Enum() *BlockTokenSecretProto_AccessModeProto {
	p := new(BlockTokenSecretProto_AccessModeProto)
	*p = x
	return p
}

func (x BlockTokenSecretProto_AccessModeProto) String() string {
	return proto.EnumName(BlockTokenSecretProto_AccessModeProto_name, int32(x))
}

func (x *BlockTokenSecretProto_AccessModeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BlockTokenSecretProto_AccessModeProto_value, data, "BlockTokenSecretProto_AccessModeProto")
	if err != nil {
		return err
	}
	*x = BlockTokenSecretProto_AccessModeProto(value)
	return nil
}

func (BlockTokenSecretProto_AccessModeProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{15, 0}
}

type UUID struct {
	MostSigBits          *int64   `protobuf:"varint,1,req,name=mostSigBits" json:"mostSigBits,omitempty"`
	LeastSigBits         *int64   `protobuf:"varint,2,req,name=leastSigBits" json:"leastSigBits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{0}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetMostSigBits() int64 {
	if m != nil && m.MostSigBits != nil {
		return *m.MostSigBits
	}
	return 0
}

func (m *UUID) GetLeastSigBits() int64 {
	if m != nil && m.LeastSigBits != nil {
		return *m.LeastSigBits
	}
	return 0
}

type DatanodeDetailsProto struct {
	// deprecated, please use uuid128 instead
	Uuid         *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	IpAddress    *string `protobuf:"bytes,2,req,name=ipAddress" json:"ipAddress,omitempty"`
	HostName     *string `protobuf:"bytes,3,req,name=hostName" json:"hostName,omitempty"`
	Ports        []*Port `protobuf:"bytes,4,rep,name=ports" json:"ports,omitempty"`
	CertSerialId *string `protobuf:"bytes,5,opt,name=certSerialId" json:"certSerialId,omitempty"`
	// network name, can be Ip address or host name, depends
	NetworkName     *string `protobuf:"bytes,6,opt,name=networkName" json:"networkName,omitempty"`
	NetworkLocation *string `protobuf:"bytes,7,opt,name=networkLocation" json:"networkLocation,omitempty"`
	Version         *string `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	SetupTime       *int64  `protobuf:"varint,9,opt,name=setupTime" json:"setupTime,omitempty"`
	Revision        *string `protobuf:"bytes,10,opt,name=revision" json:"revision,omitempty"`
	BuildDate       *string `protobuf:"bytes,11,opt,name=buildDate" json:"buildDate,omitempty"`
	// TODO(runzhiwang): when uuid is gone, specify 1 as the index of uuid128 and mark as required
	Uuid128              *UUID    `protobuf:"bytes,100,opt,name=uuid128" json:"uuid128,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatanodeDetailsProto) Reset()         { *m = DatanodeDetailsProto{} }
func (m *DatanodeDetailsProto) String() string { return proto.CompactTextString(m) }
func (*DatanodeDetailsProto) ProtoMessage()    {}
func (*DatanodeDetailsProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{1}
}

func (m *DatanodeDetailsProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatanodeDetailsProto.Unmarshal(m, b)
}
func (m *DatanodeDetailsProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatanodeDetailsProto.Marshal(b, m, deterministic)
}
func (m *DatanodeDetailsProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatanodeDetailsProto.Merge(m, src)
}
func (m *DatanodeDetailsProto) XXX_Size() int {
	return xxx_messageInfo_DatanodeDetailsProto.Size(m)
}
func (m *DatanodeDetailsProto) XXX_DiscardUnknown() {
	xxx_messageInfo_DatanodeDetailsProto.DiscardUnknown(m)
}

var xxx_messageInfo_DatanodeDetailsProto proto.InternalMessageInfo

func (m *DatanodeDetailsProto) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *DatanodeDetailsProto) GetIpAddress() string {
	if m != nil && m.IpAddress != nil {
		return *m.IpAddress
	}
	return ""
}

func (m *DatanodeDetailsProto) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *DatanodeDetailsProto) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *DatanodeDetailsProto) GetCertSerialId() string {
	if m != nil && m.CertSerialId != nil {
		return *m.CertSerialId
	}
	return ""
}

func (m *DatanodeDetailsProto) GetNetworkName() string {
	if m != nil && m.NetworkName != nil {
		return *m.NetworkName
	}
	return ""
}

func (m *DatanodeDetailsProto) GetNetworkLocation() string {
	if m != nil && m.NetworkLocation != nil {
		return *m.NetworkLocation
	}
	return ""
}

func (m *DatanodeDetailsProto) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *DatanodeDetailsProto) GetSetupTime() int64 {
	if m != nil && m.SetupTime != nil {
		return *m.SetupTime
	}
	return 0
}

func (m *DatanodeDetailsProto) GetRevision() string {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return ""
}

func (m *DatanodeDetailsProto) GetBuildDate() string {
	if m != nil && m.BuildDate != nil {
		return *m.BuildDate
	}
	return ""
}

func (m *DatanodeDetailsProto) GetUuid128() *UUID {
	if m != nil {
		return m.Uuid128
	}
	return nil
}

// *
// Proto message encapsulating information required to uniquely identify a
// OzoneManager.
type OzoneManagerDetailsProto struct {
	Uuid                 *string  `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	IpAddress            *string  `protobuf:"bytes,2,req,name=ipAddress" json:"ipAddress,omitempty"`
	HostName             *string  `protobuf:"bytes,3,req,name=hostName" json:"hostName,omitempty"`
	Ports                []*Port  `protobuf:"bytes,4,rep,name=ports" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OzoneManagerDetailsProto) Reset()         { *m = OzoneManagerDetailsProto{} }
func (m *OzoneManagerDetailsProto) String() string { return proto.CompactTextString(m) }
func (*OzoneManagerDetailsProto) ProtoMessage()    {}
func (*OzoneManagerDetailsProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{2}
}

func (m *OzoneManagerDetailsProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OzoneManagerDetailsProto.Unmarshal(m, b)
}
func (m *OzoneManagerDetailsProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OzoneManagerDetailsProto.Marshal(b, m, deterministic)
}
func (m *OzoneManagerDetailsProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OzoneManagerDetailsProto.Merge(m, src)
}
func (m *OzoneManagerDetailsProto) XXX_Size() int {
	return xxx_messageInfo_OzoneManagerDetailsProto.Size(m)
}
func (m *OzoneManagerDetailsProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OzoneManagerDetailsProto.DiscardUnknown(m)
}

var xxx_messageInfo_OzoneManagerDetailsProto proto.InternalMessageInfo

func (m *OzoneManagerDetailsProto) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *OzoneManagerDetailsProto) GetIpAddress() string {
	if m != nil && m.IpAddress != nil {
		return *m.IpAddress
	}
	return ""
}

func (m *OzoneManagerDetailsProto) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *OzoneManagerDetailsProto) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

type Port struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value                *uint32  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{3}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Port) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type PipelineID struct {
	// deprecated, please use uuid128 instead
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// TODO(runzhiwang): when id is gone, specify 1 as the index of uuid128 and mark as required
	Uuid128              *UUID    `protobuf:"bytes,100,opt,name=uuid128" json:"uuid128,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipelineID) Reset()         { *m = PipelineID{} }
func (m *PipelineID) String() string { return proto.CompactTextString(m) }
func (*PipelineID) ProtoMessage()    {}
func (*PipelineID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{4}
}

func (m *PipelineID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineID.Unmarshal(m, b)
}
func (m *PipelineID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineID.Marshal(b, m, deterministic)
}
func (m *PipelineID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineID.Merge(m, src)
}
func (m *PipelineID) XXX_Size() int {
	return xxx_messageInfo_PipelineID.Size(m)
}
func (m *PipelineID) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineID.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineID proto.InternalMessageInfo

func (m *PipelineID) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PipelineID) GetUuid128() *UUID {
	if m != nil {
		return m.Uuid128
	}
	return nil
}

type Pipeline struct {
	Members []*DatanodeDetailsProto `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
	// TODO: remove the state and leaderID from this class
	State             *PipelineState     `protobuf:"varint,2,opt,name=state,enum=hadoop.hdds.PipelineState,def=1" json:"state,omitempty"`
	Type              *ReplicationType   `protobuf:"varint,3,opt,name=type,enum=hadoop.hdds.ReplicationType,def=2" json:"type,omitempty"`
	Factor            *ReplicationFactor `protobuf:"varint,4,opt,name=factor,enum=hadoop.hdds.ReplicationFactor,def=1" json:"factor,omitempty"`
	Id                *PipelineID        `protobuf:"bytes,5,req,name=id" json:"id,omitempty"`
	LeaderID          *string            `protobuf:"bytes,6,opt,name=leaderID" json:"leaderID,omitempty"`
	MemberOrders      []uint32           `protobuf:"varint,7,rep,name=memberOrders" json:"memberOrders,omitempty"`
	CreationTimeStamp *uint64            `protobuf:"varint,8,opt,name=creationTimeStamp" json:"creationTimeStamp,omitempty"`
	// TODO(runzhiwang): when leaderID is gone, specify 6 as the index of leaderID128
	LeaderID128          *UUID    `protobuf:"bytes,100,opt,name=leaderID128" json:"leaderID128,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{5}
}

func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (m *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(m, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

const Default_Pipeline_State PipelineState = PipelineState_PIPELINE_ALLOCATED
const Default_Pipeline_Type ReplicationType = ReplicationType_STAND_ALONE
const Default_Pipeline_Factor ReplicationFactor = ReplicationFactor_ONE

func (m *Pipeline) GetMembers() []*DatanodeDetailsProto {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Pipeline) GetState() PipelineState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_Pipeline_State
}

func (m *Pipeline) GetType() ReplicationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Pipeline_Type
}

func (m *Pipeline) GetFactor() ReplicationFactor {
	if m != nil && m.Factor != nil {
		return *m.Factor
	}
	return Default_Pipeline_Factor
}

func (m *Pipeline) GetId() *PipelineID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Pipeline) GetLeaderID() string {
	if m != nil && m.LeaderID != nil {
		return *m.LeaderID
	}
	return ""
}

func (m *Pipeline) GetMemberOrders() []uint32 {
	if m != nil {
		return m.MemberOrders
	}
	return nil
}

func (m *Pipeline) GetCreationTimeStamp() uint64 {
	if m != nil && m.CreationTimeStamp != nil {
		return *m.CreationTimeStamp
	}
	return 0
}

func (m *Pipeline) GetLeaderID128() *UUID {
	if m != nil {
		return m.LeaderID128
	}
	return nil
}

type KeyValue struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{6}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Node struct {
	NodeID               *DatanodeDetailsProto `protobuf:"bytes,1,req,name=nodeID" json:"nodeID,omitempty"`
	NodeStates           []NodeState           `protobuf:"varint,2,rep,name=nodeStates,enum=hadoop.hdds.NodeState" json:"nodeStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{7}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeID() *DatanodeDetailsProto {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *Node) GetNodeStates() []NodeState {
	if m != nil {
		return m.NodeStates
	}
	return nil
}

type NodePool struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePool) Reset()         { *m = NodePool{} }
func (m *NodePool) String() string { return proto.CompactTextString(m) }
func (*NodePool) ProtoMessage()    {}
func (*NodePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{8}
}

func (m *NodePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePool.Unmarshal(m, b)
}
func (m *NodePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePool.Marshal(b, m, deterministic)
}
func (m *NodePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePool.Merge(m, src)
}
func (m *NodePool) XXX_Size() int {
	return xxx_messageInfo_NodePool.Size(m)
}
func (m *NodePool) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePool.DiscardUnknown(m)
}

var xxx_messageInfo_NodePool proto.InternalMessageInfo

func (m *NodePool) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type ContainerInfoProto struct {
	ContainerID          *int64             `protobuf:"varint,1,req,name=containerID" json:"containerID,omitempty"`
	State                *LifeCycleState    `protobuf:"varint,2,req,name=state,enum=hadoop.hdds.LifeCycleState" json:"state,omitempty"`
	PipelineID           *PipelineID        `protobuf:"bytes,3,opt,name=pipelineID" json:"pipelineID,omitempty"`
	UsedBytes            *uint64            `protobuf:"varint,4,req,name=usedBytes" json:"usedBytes,omitempty"`
	NumberOfKeys         *uint64            `protobuf:"varint,5,req,name=numberOfKeys" json:"numberOfKeys,omitempty"`
	StateEnterTime       *int64             `protobuf:"varint,6,opt,name=stateEnterTime" json:"stateEnterTime,omitempty"`
	Owner                *string            `protobuf:"bytes,7,req,name=owner" json:"owner,omitempty"`
	DeleteTransactionId  *int64             `protobuf:"varint,8,opt,name=deleteTransactionId" json:"deleteTransactionId,omitempty"`
	SequenceId           *int64             `protobuf:"varint,9,opt,name=sequenceId" json:"sequenceId,omitempty"`
	ReplicationFactor    *ReplicationFactor `protobuf:"varint,10,req,name=replicationFactor,enum=hadoop.hdds.ReplicationFactor" json:"replicationFactor,omitempty"`
	ReplicationType      *ReplicationType   `protobuf:"varint,11,req,name=replicationType,enum=hadoop.hdds.ReplicationType" json:"replicationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ContainerInfoProto) Reset()         { *m = ContainerInfoProto{} }
func (m *ContainerInfoProto) String() string { return proto.CompactTextString(m) }
func (*ContainerInfoProto) ProtoMessage()    {}
func (*ContainerInfoProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{9}
}

func (m *ContainerInfoProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfoProto.Unmarshal(m, b)
}
func (m *ContainerInfoProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfoProto.Marshal(b, m, deterministic)
}
func (m *ContainerInfoProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfoProto.Merge(m, src)
}
func (m *ContainerInfoProto) XXX_Size() int {
	return xxx_messageInfo_ContainerInfoProto.Size(m)
}
func (m *ContainerInfoProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfoProto.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfoProto proto.InternalMessageInfo

func (m *ContainerInfoProto) GetContainerID() int64 {
	if m != nil && m.ContainerID != nil {
		return *m.ContainerID
	}
	return 0
}

func (m *ContainerInfoProto) GetState() LifeCycleState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return LifeCycleState_OPEN
}

func (m *ContainerInfoProto) GetPipelineID() *PipelineID {
	if m != nil {
		return m.PipelineID
	}
	return nil
}

func (m *ContainerInfoProto) GetUsedBytes() uint64 {
	if m != nil && m.UsedBytes != nil {
		return *m.UsedBytes
	}
	return 0
}

func (m *ContainerInfoProto) GetNumberOfKeys() uint64 {
	if m != nil && m.NumberOfKeys != nil {
		return *m.NumberOfKeys
	}
	return 0
}

func (m *ContainerInfoProto) GetStateEnterTime() int64 {
	if m != nil && m.StateEnterTime != nil {
		return *m.StateEnterTime
	}
	return 0
}

func (m *ContainerInfoProto) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *ContainerInfoProto) GetDeleteTransactionId() int64 {
	if m != nil && m.DeleteTransactionId != nil {
		return *m.DeleteTransactionId
	}
	return 0
}

func (m *ContainerInfoProto) GetSequenceId() int64 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

func (m *ContainerInfoProto) GetReplicationFactor() ReplicationFactor {
	if m != nil && m.ReplicationFactor != nil {
		return *m.ReplicationFactor
	}
	return ReplicationFactor_ONE
}

func (m *ContainerInfoProto) GetReplicationType() ReplicationType {
	if m != nil && m.ReplicationType != nil {
		return *m.ReplicationType
	}
	return ReplicationType_RATIS
}

type ContainerWithPipeline struct {
	ContainerInfo        *ContainerInfoProto `protobuf:"bytes,1,req,name=containerInfo" json:"containerInfo,omitempty"`
	Pipeline             *Pipeline           `protobuf:"bytes,2,req,name=pipeline" json:"pipeline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ContainerWithPipeline) Reset()         { *m = ContainerWithPipeline{} }
func (m *ContainerWithPipeline) String() string { return proto.CompactTextString(m) }
func (*ContainerWithPipeline) ProtoMessage()    {}
func (*ContainerWithPipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{10}
}

func (m *ContainerWithPipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerWithPipeline.Unmarshal(m, b)
}
func (m *ContainerWithPipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerWithPipeline.Marshal(b, m, deterministic)
}
func (m *ContainerWithPipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerWithPipeline.Merge(m, src)
}
func (m *ContainerWithPipeline) XXX_Size() int {
	return xxx_messageInfo_ContainerWithPipeline.Size(m)
}
func (m *ContainerWithPipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerWithPipeline.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerWithPipeline proto.InternalMessageInfo

func (m *ContainerWithPipeline) GetContainerInfo() *ContainerInfoProto {
	if m != nil {
		return m.ContainerInfo
	}
	return nil
}

func (m *ContainerWithPipeline) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

type GetScmInfoRequestProto struct {
	TraceID              *string  `protobuf:"bytes,1,opt,name=traceID" json:"traceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetScmInfoRequestProto) Reset()         { *m = GetScmInfoRequestProto{} }
func (m *GetScmInfoRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetScmInfoRequestProto) ProtoMessage()    {}
func (*GetScmInfoRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{11}
}

func (m *GetScmInfoRequestProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetScmInfoRequestProto.Unmarshal(m, b)
}
func (m *GetScmInfoRequestProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetScmInfoRequestProto.Marshal(b, m, deterministic)
}
func (m *GetScmInfoRequestProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetScmInfoRequestProto.Merge(m, src)
}
func (m *GetScmInfoRequestProto) XXX_Size() int {
	return xxx_messageInfo_GetScmInfoRequestProto.Size(m)
}
func (m *GetScmInfoRequestProto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetScmInfoRequestProto.DiscardUnknown(m)
}

var xxx_messageInfo_GetScmInfoRequestProto proto.InternalMessageInfo

func (m *GetScmInfoRequestProto) GetTraceID() string {
	if m != nil && m.TraceID != nil {
		return *m.TraceID
	}
	return ""
}

type GetScmInfoResponseProto struct {
	ClusterId            *string  `protobuf:"bytes,1,req,name=clusterId" json:"clusterId,omitempty"`
	ScmId                *string  `protobuf:"bytes,2,req,name=scmId" json:"scmId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetScmInfoResponseProto) Reset()         { *m = GetScmInfoResponseProto{} }
func (m *GetScmInfoResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetScmInfoResponseProto) ProtoMessage()    {}
func (*GetScmInfoResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{12}
}

func (m *GetScmInfoResponseProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetScmInfoResponseProto.Unmarshal(m, b)
}
func (m *GetScmInfoResponseProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetScmInfoResponseProto.Marshal(b, m, deterministic)
}
func (m *GetScmInfoResponseProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetScmInfoResponseProto.Merge(m, src)
}
func (m *GetScmInfoResponseProto) XXX_Size() int {
	return xxx_messageInfo_GetScmInfoResponseProto.Size(m)
}
func (m *GetScmInfoResponseProto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetScmInfoResponseProto.DiscardUnknown(m)
}

var xxx_messageInfo_GetScmInfoResponseProto proto.InternalMessageInfo

func (m *GetScmInfoResponseProto) GetClusterId() string {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return ""
}

func (m *GetScmInfoResponseProto) GetScmId() string {
	if m != nil && m.ScmId != nil {
		return *m.ScmId
	}
	return ""
}

type ExcludeListProto struct {
	Datanodes            []string      `protobuf:"bytes,1,rep,name=datanodes" json:"datanodes,omitempty"`
	ContainerIds         []int64       `protobuf:"varint,2,rep,name=containerIds" json:"containerIds,omitempty"`
	PipelineIds          []*PipelineID `protobuf:"bytes,3,rep,name=pipelineIds" json:"pipelineIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExcludeListProto) Reset()         { *m = ExcludeListProto{} }
func (m *ExcludeListProto) String() string { return proto.CompactTextString(m) }
func (*ExcludeListProto) ProtoMessage()    {}
func (*ExcludeListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{13}
}

func (m *ExcludeListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExcludeListProto.Unmarshal(m, b)
}
func (m *ExcludeListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExcludeListProto.Marshal(b, m, deterministic)
}
func (m *ExcludeListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExcludeListProto.Merge(m, src)
}
func (m *ExcludeListProto) XXX_Size() int {
	return xxx_messageInfo_ExcludeListProto.Size(m)
}
func (m *ExcludeListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ExcludeListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ExcludeListProto proto.InternalMessageInfo

func (m *ExcludeListProto) GetDatanodes() []string {
	if m != nil {
		return m.Datanodes
	}
	return nil
}

func (m *ExcludeListProto) GetContainerIds() []int64 {
	if m != nil {
		return m.ContainerIds
	}
	return nil
}

func (m *ExcludeListProto) GetPipelineIds() []*PipelineID {
	if m != nil {
		return m.PipelineIds
	}
	return nil
}

// *
// Block ID that uniquely identify a block by SCM.
type ContainerBlockID struct {
	ContainerID          *int64   `protobuf:"varint,1,req,name=containerID" json:"containerID,omitempty"`
	LocalID              *int64   `protobuf:"varint,2,req,name=localID" json:"localID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerBlockID) Reset()         { *m = ContainerBlockID{} }
func (m *ContainerBlockID) String() string { return proto.CompactTextString(m) }
func (*ContainerBlockID) ProtoMessage()    {}
func (*ContainerBlockID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{14}
}

func (m *ContainerBlockID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerBlockID.Unmarshal(m, b)
}
func (m *ContainerBlockID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerBlockID.Marshal(b, m, deterministic)
}
func (m *ContainerBlockID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerBlockID.Merge(m, src)
}
func (m *ContainerBlockID) XXX_Size() int {
	return xxx_messageInfo_ContainerBlockID.Size(m)
}
func (m *ContainerBlockID) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerBlockID.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerBlockID proto.InternalMessageInfo

func (m *ContainerBlockID) GetContainerID() int64 {
	if m != nil && m.ContainerID != nil {
		return *m.ContainerID
	}
	return 0
}

func (m *ContainerBlockID) GetLocalID() int64 {
	if m != nil && m.LocalID != nil {
		return *m.LocalID
	}
	return 0
}

// *
// Information for the Hdds block token.
// When adding further fields, make sure they are optional as they would
// otherwise not be backwards compatible.
type BlockTokenSecretProto struct {
	OwnerId              *string                                 `protobuf:"bytes,1,req,name=ownerId" json:"ownerId,omitempty"`
	BlockId              *string                                 `protobuf:"bytes,2,req,name=blockId" json:"blockId,omitempty"`
	ExpiryDate           *uint64                                 `protobuf:"varint,3,req,name=expiryDate" json:"expiryDate,omitempty"`
	OmCertSerialId       *string                                 `protobuf:"bytes,4,req,name=omCertSerialId" json:"omCertSerialId,omitempty"`
	Modes                []BlockTokenSecretProto_AccessModeProto `protobuf:"varint,5,rep,name=modes,enum=hadoop.hdds.BlockTokenSecretProto_AccessModeProto" json:"modes,omitempty"`
	MaxLength            *uint64                                 `protobuf:"varint,6,req,name=maxLength" json:"maxLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *BlockTokenSecretProto) Reset()         { *m = BlockTokenSecretProto{} }
func (m *BlockTokenSecretProto) String() string { return proto.CompactTextString(m) }
func (*BlockTokenSecretProto) ProtoMessage()    {}
func (*BlockTokenSecretProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{15}
}

func (m *BlockTokenSecretProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTokenSecretProto.Unmarshal(m, b)
}
func (m *BlockTokenSecretProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTokenSecretProto.Marshal(b, m, deterministic)
}
func (m *BlockTokenSecretProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTokenSecretProto.Merge(m, src)
}
func (m *BlockTokenSecretProto) XXX_Size() int {
	return xxx_messageInfo_BlockTokenSecretProto.Size(m)
}
func (m *BlockTokenSecretProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTokenSecretProto.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTokenSecretProto proto.InternalMessageInfo

func (m *BlockTokenSecretProto) GetOwnerId() string {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return ""
}

func (m *BlockTokenSecretProto) GetBlockId() string {
	if m != nil && m.BlockId != nil {
		return *m.BlockId
	}
	return ""
}

func (m *BlockTokenSecretProto) GetExpiryDate() uint64 {
	if m != nil && m.ExpiryDate != nil {
		return *m.ExpiryDate
	}
	return 0
}

func (m *BlockTokenSecretProto) GetOmCertSerialId() string {
	if m != nil && m.OmCertSerialId != nil {
		return *m.OmCertSerialId
	}
	return ""
}

func (m *BlockTokenSecretProto) GetModes() []BlockTokenSecretProto_AccessModeProto {
	if m != nil {
		return m.Modes
	}
	return nil
}

func (m *BlockTokenSecretProto) GetMaxLength() uint64 {
	if m != nil && m.MaxLength != nil {
		return *m.MaxLength
	}
	return 0
}

type BlockID struct {
	ContainerBlockID      *ContainerBlockID `protobuf:"bytes,1,req,name=containerBlockID" json:"containerBlockID,omitempty"`
	BlockCommitSequenceId *uint64           `protobuf:"varint,2,opt,name=blockCommitSequenceId,def=0" json:"blockCommitSequenceId,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *BlockID) Reset()         { *m = BlockID{} }
func (m *BlockID) String() string { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()    {}
func (*BlockID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc7d635499c91f08, []int{16}
}

func (m *BlockID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockID.Unmarshal(m, b)
}
func (m *BlockID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockID.Marshal(b, m, deterministic)
}
func (m *BlockID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockID.Merge(m, src)
}
func (m *BlockID) XXX_Size() int {
	return xxx_messageInfo_BlockID.Size(m)
}
func (m *BlockID) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockID.DiscardUnknown(m)
}

var xxx_messageInfo_BlockID proto.InternalMessageInfo

const Default_BlockID_BlockCommitSequenceId uint64 = 0

func (m *BlockID) GetContainerBlockID() *ContainerBlockID {
	if m != nil {
		return m.ContainerBlockID
	}
	return nil
}

func (m *BlockID) GetBlockCommitSequenceId() uint64 {
	if m != nil && m.BlockCommitSequenceId != nil {
		return *m.BlockCommitSequenceId
	}
	return Default_BlockID_BlockCommitSequenceId
}

func init() {
	proto.RegisterEnum("hadoop.hdds.PipelineState", PipelineState_name, PipelineState_value)
	proto.RegisterEnum("hadoop.hdds.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("hadoop.hdds.NodeState", NodeState_name, NodeState_value)
	proto.RegisterEnum("hadoop.hdds.QueryScope", QueryScope_name, QueryScope_value)
	proto.RegisterEnum("hadoop.hdds.LifeCycleState", LifeCycleState_name, LifeCycleState_value)
	proto.RegisterEnum("hadoop.hdds.LifeCycleEvent", LifeCycleEvent_name, LifeCycleEvent_value)
	proto.RegisterEnum("hadoop.hdds.ReplicationType", ReplicationType_name, ReplicationType_value)
	proto.RegisterEnum("hadoop.hdds.ReplicationFactor", ReplicationFactor_name, ReplicationFactor_value)
	proto.RegisterEnum("hadoop.hdds.ScmOps", ScmOps_name, ScmOps_value)
	proto.RegisterEnum("hadoop.hdds.BlockTokenSecretProto_AccessModeProto", BlockTokenSecretProto_AccessModeProto_name, BlockTokenSecretProto_AccessModeProto_value)
	proto.RegisterType((*UUID)(nil), "hadoop.hdds.UUID")
	proto.RegisterType((*DatanodeDetailsProto)(nil), "hadoop.hdds.DatanodeDetailsProto")
	proto.RegisterType((*OzoneManagerDetailsProto)(nil), "hadoop.hdds.OzoneManagerDetailsProto")
	proto.RegisterType((*Port)(nil), "hadoop.hdds.Port")
	proto.RegisterType((*PipelineID)(nil), "hadoop.hdds.PipelineID")
	proto.RegisterType((*Pipeline)(nil), "hadoop.hdds.Pipeline")
	proto.RegisterType((*KeyValue)(nil), "hadoop.hdds.KeyValue")
	proto.RegisterType((*Node)(nil), "hadoop.hdds.Node")
	proto.RegisterType((*NodePool)(nil), "hadoop.hdds.NodePool")
	proto.RegisterType((*ContainerInfoProto)(nil), "hadoop.hdds.ContainerInfoProto")
	proto.RegisterType((*ContainerWithPipeline)(nil), "hadoop.hdds.ContainerWithPipeline")
	proto.RegisterType((*GetScmInfoRequestProto)(nil), "hadoop.hdds.GetScmInfoRequestProto")
	proto.RegisterType((*GetScmInfoResponseProto)(nil), "hadoop.hdds.GetScmInfoResponseProto")
	proto.RegisterType((*ExcludeListProto)(nil), "hadoop.hdds.ExcludeListProto")
	proto.RegisterType((*ContainerBlockID)(nil), "hadoop.hdds.ContainerBlockID")
	proto.RegisterType((*BlockTokenSecretProto)(nil), "hadoop.hdds.BlockTokenSecretProto")
	proto.RegisterType((*BlockID)(nil), "hadoop.hdds.BlockID")
}

func init() { proto.RegisterFile("hdds.proto", fileDescriptor_bc7d635499c91f08) }

var fileDescriptor_bc7d635499c91f08 = []byte{
	// 1703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x72, 0xe3, 0xc6,
	0x11, 0x2e, 0xfc, 0xf0, 0xaf, 0xb9, 0x92, 0x46, 0xe3, 0xd5, 0x1a, 0xd9, 0xc8, 0x0e, 0xc3, 0x54,
	0xb2, 0x2c, 0x26, 0x91, 0x76, 0xe9, 0x54, 0x1c, 0xcb, 0xc9, 0x81, 0x22, 0xb0, 0x16, 0xca, 0x14,
	0x41, 0x0f, 0x28, 0xbb, 0xec, 0x8b, 0x03, 0x01, 0xb3, 0x12, 0x4a, 0x20, 0x40, 0x03, 0xa0, 0xbc,
	0xcc, 0x13, 0xa4, 0x52, 0x95, 0x4a, 0xe5, 0x9e, 0x43, 0x5e, 0x23, 0x0f, 0x92, 0xf7, 0xc8, 0x23,
	0xa4, 0x7a, 0xf0, 0x43, 0x40, 0xd2, 0xee, 0x26, 0x17, 0xdf, 0xd0, 0xdf, 0xf4, 0xcf, 0x4c, 0xf7,
	0xd7, 0x3d, 0x03, 0x80, 0x6b, 0xcf, 0x4b, 0x8e, 0x56, 0x71, 0x94, 0x46, 0xb4, 0x7b, 0xed, 0x78,
	0x51, 0xb4, 0x3a, 0x42, 0xa8, 0x3f, 0x05, 0xf5, 0xe2, 0xc2, 0xd4, 0x69, 0x0f, 0xba, 0xcb, 0x28,
	0x49, 0x6d, 0xff, 0xea, 0xd4, 0x4f, 0x13, 0x4d, 0xea, 0xc9, 0x03, 0x85, 0x55, 0x21, 0xda, 0x87,
	0x47, 0x01, 0x77, 0xb6, 0x2a, 0xb2, 0x50, 0xa9, 0x61, 0xfd, 0x7f, 0x28, 0xf0, 0x58, 0x77, 0x52,
	0x27, 0x8c, 0x3c, 0xae, 0xf3, 0xd4, 0xf1, 0x83, 0x64, 0x2e, 0x62, 0x52, 0x50, 0xd7, 0x6b, 0xdf,
	0xd3, 0xa4, 0x9e, 0x34, 0xe8, 0x30, 0xf1, 0x4d, 0x0f, 0xa1, 0xe3, 0xaf, 0xc6, 0x9e, 0x17, 0xf3,
	0x24, 0xf3, 0xd6, 0x61, 0x5b, 0x80, 0x3e, 0x85, 0xf6, 0x75, 0x94, 0xa4, 0x33, 0x67, 0xc9, 0x35,
	0x45, 0x2c, 0x96, 0x32, 0x7d, 0x06, 0x8d, 0x55, 0x14, 0xa7, 0x89, 0xa6, 0xf6, 0x94, 0x41, 0x77,
	0xb4, 0x7f, 0x54, 0x39, 0xd1, 0xd1, 0x3c, 0x8a, 0x53, 0x96, 0xad, 0xe3, 0x9e, 0x5d, 0x1e, 0xa7,
	0x36, 0x8f, 0x7d, 0x27, 0x30, 0x3d, 0xad, 0x21, 0xc2, 0xd7, 0x30, 0x3c, 0x79, 0xc8, 0xd3, 0xef,
	0xa3, 0xf8, 0x46, 0xc4, 0x6a, 0x0a, 0x95, 0x2a, 0x44, 0x07, 0xb0, 0x97, 0x8b, 0xd3, 0xc8, 0x75,
	0x52, 0x3f, 0x0a, 0xb5, 0x96, 0xd0, 0xba, 0x0b, 0x53, 0x0d, 0x5a, 0xb7, 0x3c, 0x4e, 0x50, 0xa3,
	0x2d, 0x34, 0x0a, 0x11, 0x0f, 0x9b, 0xf0, 0x74, 0xbd, 0x5a, 0xf8, 0x4b, 0xae, 0x75, 0x7a, 0xd2,
	0x40, 0x61, 0x5b, 0x00, 0x0f, 0x1b, 0xf3, 0x5b, 0x5f, 0x18, 0x82, 0x30, 0x2c, 0x65, 0xb4, 0xbc,
	0x5c, 0xfb, 0x81, 0xa7, 0x3b, 0x29, 0xd7, 0xba, 0x62, 0x71, 0x0b, 0xd0, 0x5f, 0x42, 0x0b, 0x93,
	0xf9, 0x62, 0xf4, 0x3b, 0xcd, 0xeb, 0x49, 0xf7, 0x92, 0x81, 0xb5, 0x65, 0x85, 0x46, 0xff, 0xef,
	0x12, 0x68, 0xd6, 0x9f, 0xa2, 0x90, 0x9f, 0x3b, 0xa1, 0x73, 0xc5, 0xe3, 0x37, 0x94, 0x48, 0xfe,
	0x01, 0x4b, 0xd4, 0x7f, 0x0e, 0x2a, 0x8a, 0x18, 0x3e, 0x44, 0x47, 0x79, 0x78, 0xfc, 0xa6, 0x8f,
	0xa1, 0x71, 0xeb, 0x04, 0x6b, 0x2e, 0x42, 0xef, 0xb0, 0x4c, 0xe8, 0x9b, 0x00, 0x73, 0x7f, 0xc5,
	0x03, 0x3f, 0xe4, 0xa6, 0x4e, 0x77, 0x41, 0x2e, 0x79, 0x25, 0xfb, 0xde, 0xff, 0x97, 0x90, 0x7f,
	0x2b, 0xd0, 0x2e, 0x7c, 0xd1, 0x4f, 0xa1, 0xb5, 0xe4, 0xcb, 0x4b, 0x1e, 0x23, 0xfd, 0x71, 0xd3,
	0x3f, 0xad, 0x59, 0x3e, 0xc4, 0x6b, 0x56, 0x58, 0x50, 0x1d, 0x1a, 0x49, 0x8a, 0x15, 0x92, 0x7b,
	0xd2, 0x60, 0x77, 0xf4, 0xb4, 0x7e, 0xde, 0x3c, 0x84, 0x8d, 0x1a, 0x27, 0x74, 0x6e, 0xce, 0x8d,
	0xa9, 0x39, 0x33, 0xbe, 0x1d, 0x4f, 0xa7, 0xd6, 0x64, 0xbc, 0x30, 0x74, 0x96, 0x19, 0xd3, 0x3f,
	0x80, 0x9a, 0x6e, 0x56, 0x98, 0x4d, 0x74, 0x72, 0x58, 0x73, 0xc2, 0xf8, 0x2a, 0xf0, 0x33, 0x9e,
	0x2d, 0x36, 0x2b, 0x7e, 0xd2, 0xb5, 0x17, 0xe3, 0x99, 0xfe, 0xed, 0x78, 0x6a, 0xcd, 0x0c, 0x26,
	0xcc, 0xe8, 0xa7, 0xd0, 0x7c, 0xe5, 0xb8, 0x69, 0x14, 0x6b, 0xaa, 0x70, 0xf0, 0xe1, 0x9b, 0x1c,
	0xbc, 0x14, 0x5a, 0x27, 0x0a, 0x9a, 0xe6, 0x26, 0xf4, 0x99, 0x48, 0x64, 0xa3, 0x27, 0x0f, 0xba,
	0xa3, 0xf7, 0x1f, 0xdc, 0xbe, 0xa9, 0x8b, 0x0c, 0x3f, 0x85, 0x76, 0xc0, 0x1d, 0x8f, 0xc7, 0xa6,
	0x9e, 0x77, 0x4b, 0x29, 0x63, 0xc3, 0x65, 0x19, 0xb1, 0x62, 0x0f, 0x13, 0xd9, 0xea, 0x29, 0x83,
	0x1d, 0x56, 0xc3, 0xe8, 0xaf, 0x60, 0xdf, 0x8d, 0x79, 0x76, 0x10, 0x7f, 0x89, 0x49, 0x59, 0xae,
	0x44, 0xbb, 0xa8, 0xec, 0xfe, 0x02, 0xfd, 0x08, 0xba, 0x85, 0xf7, 0xb7, 0xd6, 0xb4, 0xaa, 0xd5,
	0x1f, 0x41, 0xfb, 0x73, 0xbe, 0xf9, 0x12, 0xe9, 0x42, 0x09, 0x28, 0x37, 0x7c, 0x93, 0xf3, 0x0a,
	0x3f, 0xab, 0xb4, 0xc2, 0xdd, 0xe7, 0xb4, 0xda, 0x80, 0x3a, 0x8b, 0x3c, 0x4e, 0x3f, 0x81, 0x26,
	0x96, 0xd9, 0xd4, 0x85, 0xc9, 0xff, 0xc4, 0x82, 0xdc, 0x80, 0xfe, 0x16, 0x00, 0xbf, 0x44, 0x99,
	0xb1, 0x5f, 0x94, 0xc1, 0xee, 0xe8, 0x49, 0xcd, 0x7c, 0x56, 0x2c, 0xb3, 0x8a, 0x66, 0xff, 0x23,
	0x68, 0xe3, 0xc2, 0x3c, 0x8a, 0x02, 0x6c, 0x1c, 0x5c, 0x29, 0x38, 0xb8, 0x7f, 0xcf, 0x9c, 0x65,
	0xeb, 0xfd, 0xbf, 0xa8, 0x40, 0x27, 0x51, 0x98, 0x3a, 0x7e, 0xc8, 0x63, 0x33, 0x7c, 0x15, 0x65,
	0x6d, 0xdc, 0x83, 0xae, 0x5b, 0xa2, 0x7a, 0x31, 0xc8, 0x2b, 0x10, 0x7d, 0xb1, 0xa5, 0xaa, 0x3c,
	0xd8, 0x1d, 0xfd, 0xb8, 0x16, 0x61, 0xea, 0xbf, 0xe2, 0x93, 0x8d, 0x1b, 0xe4, 0xbb, 0xcc, 0x79,
	0xf9, 0x31, 0xc0, 0xaa, 0x24, 0x81, 0x60, 0xe7, 0x5b, 0x38, 0x52, 0x51, 0xc5, 0x01, 0xb2, 0x4e,
	0xb8, 0x77, 0xba, 0xc1, 0x84, 0xa8, 0x3d, 0x79, 0xa0, 0xb2, 0x2d, 0x80, 0x6c, 0x09, 0xd7, 0x82,
	0x19, 0xaf, 0x3e, 0xe7, 0x9b, 0x44, 0x90, 0x4f, 0x65, 0x35, 0x8c, 0xfe, 0x02, 0x76, 0xc5, 0x1e,
	0x8c, 0x30, 0xe5, 0xb1, 0x98, 0x9e, 0x4d, 0x31, 0x3d, 0xef, 0xa0, 0x58, 0xd4, 0xe8, 0xfb, 0x90,
	0xc7, 0x5a, 0x4b, 0x14, 0x3a, 0x13, 0xe8, 0x73, 0x78, 0xcf, 0xe3, 0x01, 0x4f, 0xf9, 0x22, 0x76,
	0xc2, 0xc4, 0x71, 0x91, 0x5b, 0xa6, 0x27, 0xd8, 0xa6, 0xb0, 0x87, 0x96, 0xe8, 0x87, 0x00, 0x09,
	0xff, 0x6e, 0xcd, 0x43, 0x97, 0x9b, 0x5e, 0x3e, 0xa9, 0x2b, 0x08, 0x9d, 0xc2, 0x7e, 0x7c, 0xb7,
	0x91, 0x34, 0x10, 0x99, 0x7c, 0x47, 0xbb, 0xb1, 0xfb, 0x86, 0xf4, 0x25, 0xec, 0xc5, 0xf5, 0xbe,
	0xd6, 0xba, 0xc2, 0xd7, 0x5b, 0x7b, 0x9f, 0xdd, 0x35, 0xc2, 0xc9, 0x7e, 0x50, 0x92, 0xe1, 0x2b,
	0x3f, 0xbd, 0x2e, 0xa7, 0x9a, 0x01, 0x3b, 0x6e, 0x95, 0x25, 0x39, 0xab, 0x7f, 0x52, 0xf3, 0x7f,
	0x9f, 0x47, 0xac, 0x6e, 0x45, 0x5f, 0x40, 0xbb, 0x28, 0xab, 0xe0, 0x4d, 0x77, 0x74, 0xf0, 0x60,
	0xfd, 0x59, 0xa9, 0xd6, 0x1f, 0xc1, 0x93, 0xcf, 0x78, 0x6a, 0xbb, 0x4b, 0x74, 0xc0, 0x30, 0x83,
	0x49, 0x9a, 0x71, 0x54, 0x83, 0x56, 0x1a, 0x3b, 0x6e, 0xd6, 0x63, 0xe2, 0x9a, 0xcc, 0xc5, 0xfe,
	0x39, 0xbc, 0x5f, 0xb5, 0x49, 0x56, 0x51, 0x98, 0xf0, 0xcc, 0xe8, 0x10, 0x3a, 0x6e, 0xb0, 0x4e,
	0x52, 0x1e, 0x9b, 0xc5, 0x25, 0xb5, 0x05, 0xb0, 0xfc, 0x89, 0xbb, 0x34, 0xbd, 0xfc, 0x96, 0xca,
	0x84, 0xfe, 0xdf, 0x24, 0x20, 0xc6, 0x6b, 0x37, 0x58, 0x7b, 0x7c, 0xea, 0x17, 0xd1, 0x0f, 0xa1,
	0xe3, 0xe5, 0x5d, 0x9c, 0x75, 0x59, 0x87, 0x6d, 0x01, 0xf1, 0x64, 0x28, 0x4f, 0xee, 0x65, 0x5d,
	0xac, 0xb0, 0x1a, 0x46, 0x3f, 0x81, 0x6e, 0xc9, 0x71, 0x2f, 0xd1, 0x14, 0xd1, 0xa9, 0x6f, 0xec,
	0x87, 0xaa, 0x6e, 0x7f, 0x06, 0xa4, 0x4c, 0xf6, 0x69, 0x10, 0xb9, 0x37, 0xd9, 0xdb, 0xeb, 0x1d,
	0x2d, 0xab, 0x41, 0x2b, 0x88, 0x5c, 0x27, 0x30, 0xf5, 0xfc, 0xd9, 0x55, 0x88, 0xfd, 0x7f, 0xc9,
	0x70, 0x20, 0xfc, 0x2c, 0xa2, 0x1b, 0x1e, 0xda, 0xdc, 0x8d, 0xf9, 0x36, 0xc9, 0xa2, 0x07, 0xca,
	0x6c, 0x15, 0x22, 0xae, 0x5c, 0x8a, 0xd0, 0x45, 0xb6, 0x0a, 0x11, 0xc9, 0xcf, 0x5f, 0xaf, 0xfc,
	0x78, 0x23, 0x1e, 0x1b, 0x8a, 0x68, 0xc7, 0x0a, 0x82, 0xcd, 0x18, 0x2d, 0x27, 0xd5, 0x17, 0x95,
	0x2a, 0x1c, 0xdc, 0x41, 0xe9, 0x19, 0x34, 0x96, 0x22, 0xbd, 0x0d, 0x31, 0x03, 0x47, 0xb5, 0xd4,
	0x3c, 0xb8, 0xdd, 0xa3, 0xb1, 0xeb, 0xf2, 0x24, 0x39, 0xc7, 0x31, 0x28, 0xf8, 0x97, 0x39, 0xc0,
	0x62, 0x2d, 0x9d, 0xd7, 0x53, 0x1e, 0x5e, 0xa5, 0xd7, 0x5a, 0x33, 0x1b, 0x20, 0x25, 0xd0, 0xff,
	0x3d, 0xec, 0xdd, 0xb1, 0xa3, 0x6d, 0x50, 0x99, 0x31, 0xd6, 0x89, 0x44, 0x3b, 0xd0, 0xf8, 0x8a,
	0x99, 0x0b, 0x83, 0xc8, 0x08, 0x4e, 0xac, 0xf9, 0xd7, 0x44, 0xa1, 0x00, 0x4d, 0xdd, 0x98, 0x1a,
	0x0b, 0x83, 0xa8, 0xfd, 0xbf, 0x4a, 0xd0, 0x2a, 0x6a, 0x60, 0x02, 0x71, 0xef, 0xd4, 0x25, 0xef,
	0x94, 0x0f, 0x1e, 0xee, 0x94, 0x5c, 0x89, 0xdd, 0x33, 0xa3, 0x1f, 0xc3, 0x81, 0xc8, 0xe7, 0x24,
	0x5a, 0x2e, 0xfd, 0xd4, 0xde, 0x0e, 0x13, 0xbc, 0x6e, 0xd4, 0x13, 0xe9, 0x39, 0x7b, 0x78, 0x7d,
	0xc8, 0x61, 0xa7, 0xf6, 0x52, 0xa0, 0x4f, 0xe0, 0x81, 0xb7, 0x02, 0x91, 0xe8, 0x3e, 0xec, 0x94,
	0xb8, 0x35, 0x37, 0x66, 0x44, 0xa6, 0x8f, 0x81, 0x94, 0x90, 0x6e, 0xb1, 0xf3, 0xf1, 0x6c, 0x41,
	0x14, 0xfa, 0x1e, 0xec, 0x95, 0xe8, 0x64, 0x6a, 0xd9, 0x86, 0x4e, 0xd4, 0xe1, 0x6f, 0xb2, 0xdb,
	0x06, 0xe7, 0x06, 0x6d, 0x82, 0x6c, 0x9d, 0x13, 0x89, 0xb6, 0x40, 0xb1, 0x27, 0xe7, 0x44, 0xa6,
	0x8f, 0xa0, 0xad, 0x8f, 0x17, 0xe3, 0x99, 0xa5, 0x1b, 0x44, 0xc1, 0x14, 0x32, 0x63, 0x62, 0xcd,
	0x88, 0x3a, 0xfc, 0x12, 0x3a, 0xe5, 0xe5, 0x45, 0xbb, 0xd0, 0x3a, 0x33, 0xc6, 0xd3, 0xc5, 0xd9,
	0xd7, 0x59, 0x9e, 0xed, 0xc5, 0x78, 0x9a, 0xe7, 0x59, 0xc7, 0xe4, 0x8b, 0xc8, 0xba, 0x31, 0xb1,
	0xce, 0xcf, 0x4d, 0xdb, 0x36, 0xad, 0x99, 0x39, 0xfb, 0x8c, 0xa8, 0x94, 0xc2, 0x6e, 0x15, 0x34,
	0x74, 0xd2, 0x18, 0xfe, 0x0c, 0xe0, 0x8b, 0x35, 0x8f, 0x37, 0xb6, 0x1b, 0xad, 0x84, 0xe3, 0xc9,
	0xf4, 0xc2, 0x5e, 0x18, 0x8c, 0x48, 0xe8, 0x6d, 0x6e, 0x59, 0x53, 0x22, 0x0f, 0xff, 0x08, 0xbb,
	0xf5, 0x8b, 0x09, 0xd7, 0xc4, 0xc9, 0xa5, 0xcc, 0xc4, 0xb2, 0x31, 0x82, 0x4c, 0x09, 0x3c, 0xfa,
	0xe2, 0x62, 0x6c, 0x9b, 0xc5, 0x69, 0x45, 0xc1, 0x8b, 0x93, 0x8b, 0xc3, 0x61, 0xf1, 0x51, 0xb7,
	0x81, 0x86, 0x19, 0x15, 0x74, 0xd2, 0x1c, 0x7a, 0x95, 0x08, 0xc6, 0x2d, 0x0f, 0x53, 0x54, 0x7e,
	0x69, 0xce, 0xc6, 0x53, 0xf3, 0x1b, 0x83, 0x48, 0x74, 0x0f, 0xba, 0x15, 0xc7, 0x44, 0xc6, 0x53,
	0x67, 0x9f, 0x0a, 0xae, 0xbd, 0xb4, 0xd8, 0x24, 0x4f, 0x31, 0x51, 0x2b, 0x24, 0x6b, 0x64, 0xdb,
	0x33, 0xc6, 0xb3, 0x8b, 0x39, 0x69, 0x0e, 0x4f, 0x60, 0xef, 0xce, 0x28, 0x17, 0x29, 0x1e, 0x2f,
	0x4c, 0x3b, 0x8b, 0x51, 0x79, 0xd3, 0x11, 0x59, 0xd8, 0x9e, 0x8d, 0x4d, 0x4c, 0x94, 0x32, 0x7c,
	0x06, 0xfb, 0xf7, 0xae, 0x14, 0xac, 0x1b, 0xaa, 0x8a, 0x22, 0x2c, 0xce, 0x98, 0x61, 0x10, 0x65,
	0xf8, 0x1f, 0x09, 0x9a, 0xb6, 0xbb, 0xb4, 0x56, 0x09, 0x12, 0xc5, 0x09, 0x70, 0x54, 0xa4, 0x5c,
	0xb0, 0x93, 0x48, 0xf4, 0x00, 0xf6, 0x6f, 0xf8, 0x46, 0x48, 0x09, 0x0e, 0x59, 0x9c, 0x8b, 0x44,
	0xa6, 0xbb, 0x00, 0x57, 0xe5, 0xe0, 0xcd, 0xce, 0x94, 0xdd, 0x8e, 0x99, 0x9d, 0x4a, 0x3f, 0x80,
	0x1f, 0x89, 0xc7, 0x19, 0xaf, 0x6c, 0xa2, 0x60, 0x2b, 0x69, 0xa0, 0xdb, 0x22, 0x52, 0xd9, 0x22,
	0xa4, 0x89, 0xf5, 0xb8, 0xe2, 0xe9, 0x16, 0x69, 0xd1, 0x43, 0xd0, 0xaa, 0x48, 0xf5, 0xae, 0x22,
	0x6d, 0xdc, 0x70, 0xe0, 0x27, 0x15, 0x83, 0x0e, 0x32, 0x29, 0xdb, 0xc9, 0x16, 0x04, 0xba, 0x03,
	0x9d, 0xef, 0x90, 0x35, 0x48, 0x49, 0xd2, 0x3d, 0xbd, 0x84, 0x9f, 0x47, 0xf1, 0xd5, 0x91, 0xb3,
	0x72, 0xdc, 0x6b, 0x5e, 0xeb, 0x57, 0xf1, 0xcb, 0xeb, 0x46, 0x41, 0xf6, 0x71, 0x0a, 0x67, 0x9e,
	0x97, 0x3d, 0xda, 0x92, 0x6f, 0x9e, 0x5d, 0xf9, 0xe9, 0xf5, 0xfa, 0xf2, 0xc8, 0x8d, 0x96, 0xc7,
	0x3c, 0xe0, 0x37, 0xc7, 0x11, 0xfe, 0x1a, 0xfd, 0xfa, 0x2a, 0x3a, 0x76, 0x56, 0xfe, 0xb1, 0xd0,
	0x3f, 0x46, 0x1f, 0x7f, 0x96, 0xa4, 0x7f, 0x4a, 0xd2, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xec,
	0x95, 0x2e, 0x6d, 0x43, 0x0f, 0x00, 0x00,
}
